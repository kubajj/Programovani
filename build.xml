<?xml version="1.0" encoding="UTF-8"?>
<!-- Build file for our project -->
<project basedir="." name="Your project" default="main">
    <property name="java.src.dir" value="src/kubajj/lekce26" />
    <property name="java.test.src.dir" value="src/test-java" />
 
    <property name="build.dir" location="out" />
    <property name="classes.build.dir" location="${build.dir}/classes" />
    <property name="jar.build.dir" location="${build.dir}/jars" />
    <property name="test.classes.build.dir" location="${build.dir}/test-classes" />
    <property name="test.results.dir" value="${build.dir}/test-results" />
 
    <property name="junit.jar.path" value="lib/junit-4.11.jar" />
    <property name="hamcrest.jar.path" value="lib/hamcrest-core.jar" />
 
 
 
    <target name="main"
            depends="compile"
            description="Default target: compile everything."
        >
    </target>
 
    <target name="compile"
            description="Compile everything."
        >
        <mkdir dir="${classes.build.dir}" />
        <javac
                destdir="${classes.build.dir}"
                debug="true"
                includeantruntime="false">
            <src path="${java.src.dir}" />
            <compilerarg value="-Xlint:all"/>
        </javac>
    </target>
 
    <target name="compile-test"
            depends="compile"
            description="Compile all the test code."
        >
        <mkdir dir="${test.classes.build.dir}" />
        <javac
                destdir="${test.classes.build.dir}"
                debug="true"
                includeantruntime="false">
            <src path="${java.test.src.dir}" />
            <classpath>
                <pathelement path="${classes.build.dir}" />
                <pathelement path="${junit.jar.path}" />
                <pathelement path="${hamcrest.jar.path}" />
            </classpath>
            <compilerarg value="-Xlint:all"/>
        </javac>
    </target>
 
    <target name="test"
            depends="compile,compile-test"
            description="Run JUnit tests, generate HTML report."
        >
        <mkdir dir="${test.results.dir}"/>
        <junit printsummary="withOutAndErr" haltonfailure="no">
            <classpath>
                <pathelement path="${junit.jar.path}"/>
                <pathelement path="${hamcrest.jar.path}" />
                <pathelement path="${test.classes.build.dir}"/>
                <pathelement path="${classes.build.dir}"/>
            </classpath>
 
            <formatter type="plain" />
            <formatter type="xml" />
 
            <batchtest fork="yes" todir="${test.results.dir}">
                <fileset dir="${test.classes.build.dir}">
                    <include name="**/*Test.class"/>
                </fileset>
            </batchtest>
        </junit>
 
        <junitreport todir="${test.results.dir}">
            <fileset dir="${test.results.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${test.results.dir}/html"/>
        </junitreport>
    </target>
 
    <target name="jar"
            depends="compile"
            description="Prepare application JAR">
        <mkdir dir="${jar.build.dir}" />
        <jar destfile="${jar.build.dir}/app.jar">
            <fileset dir="${classes.build.dir}" includes="**/*.class" />
            <manifest>
                <attribute name="Main-Class" value="kubajj.lekce26.StromecekII" />
            </manifest>
        </jar>
    </target>
 
    <target name="clean"
            description="Remove generated files."
        >
        <delete dir="${build.dir}" />
    </target>
</project>
